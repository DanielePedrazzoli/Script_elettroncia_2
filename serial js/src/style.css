

.light{
    --bg_body:rgb(200, 200, 200);
    --bg_window:rgb(230, 230, 230);
    --colorText:rgb(0, 0, 0); 
}

.dark{
    --bg_body:rgb(25,25,40);
    --bg_window:rgb(45,45,60);
    --colorText:rgb(180, 180, 180);
}

body{
    min-height: 100vh;
    background-color: var(--bg_body);
    color: var(--colorText);
    margin: 0%;
    font-family:Arial, Helvetica, sans-serif;
    font-size: 0.95rem;
}


#Container{
    display: grid;
    grid-template-areas: 
    'head      data'
    'canvas  data'
    'text      data' ;
    padding: 0.5rem;
    height: calc(100vh - 3rem);
    width: calc(100vw - 2rem);
    grid-template-rows: 15%  60% 25%;
    grid-template-columns: 70% 30%;
    gap: 1rem;
}


#Head{
    grid-area: head;
    display: flex;
    flex-direction: column;
    /* background-color: aqua; */

}

#Head div{
    display: flex;
    align-items: center;
    gap: 1rem;
}


#CanvasContainer{
    grid-area: canvas;
    /* background-color: red; */

    border-radius: 10px;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}


canvas{
    width: 100%;
    height: calc(100% - 3rem);
    background-color: var(--bg_window);
    border-radius: 10px;
    box-shadow: 5px 5px 5px 2px rgba(0,0,0,0.5);
}

#CanvasLegend{
    display: flex;
    gap: 2rem;
    align-items: center;
}
#CanvasLegend span{
    width: max-content;
    margin-left: 30px;
    position: relative;
}

#CanvasLegend span::before{
    position: absolute;
    content: '';
    width: 15px;
    height: 15px;
    top: 0%;
    left: -25px;
    border-radius: 50%;
    background-color: var(--Bg_color_Line);
}

#CanvasControll{
    display: flex;
    flex-direction: row;
    gap: 2rem;

    align-items: center;
}

#CanvasControll > div{
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    align-items: center;
}



#CanvasContainer  #AmplificationValue{
   padding: 0.2rem;
   background-color:var(--bg_window) ;
   border: 1px solid gray;
   color: var(--colorText);
   outline: none;
   width: 5ch;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

#DataConainer{
    grid-area: data;
    width: calc(100% - 1rem);
    /* background-color: violet; */
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 0.5rem;

}

#DataConainer div{
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}

#DataConainer textarea{
    height: 100%;
    width: 100%;
    box-shadow: 5px 5px 5px 2px rgba(0,0,0,0.5);
    border-radius: 10px;
    padding-left: 1rem;
}


#TextContainer{
    width: calc(100%);
    display: flex;

    justify-content: space-evenly;
    grid-area: text;
    flex-direction: column;
    /* background-color: green; */
   
}

#TextContainer > div{
    width: calc(100%);
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    grid-area: text;
}
#TextContainer textarea{
    width: 100%;
    border-radius: 10px;
    height: calc(100% - 2rem );
    padding: 0.5rem;
    box-shadow: 5px 5px 5px 2px rgba(0,0,0,0.5);
    
}

#SendingBtnContainer{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-basis: 20%;
    flex-direction: column;
    gap: 20%;
    height: 100%;
}

textarea{
    background-color: var(--bg_window);
    border: none;
    outline: none;
    color: var(--colorText);
    resize: none;
    font-size: 0.95rem;
}



button{
    width: 100px;
    height: 35px;
    border-radius: 10px;
    border: none;
    background: linear-gradient(rgb(0, 188, 0), rgb(0, 110, 0));
    color: rgb(230,230,230);
    cursor: pointer;
    transition: all 0.5s;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.InfoBtn{
    background: linear-gradient(rgb(0, 128, 255), rgb(0, 64, 128));
}

.ErrorBtn{
    background: linear-gradient(rgb(203, 0, 0), rgb(134, 0, 0));
}



button:hover{
    filter: brightness(1.5);
    color: black;
    font-weight: bold;
}

#Head .CheckBoxContainer{
    margin-left: auto;
    width: 150px;
}

.CheckBoxContainer{
    display: flex;
    padding: 0.5rem;
    justify-content: space-between; 
}


.CheckBoxContainer input[type="checkbox"]{
    width: 0%;
    height: 0%;
    position: relative;
    cursor: pointer;
}

.CheckBoxContainer input[type="checkbox"]::before{
    content: '';
    position: absolute;
    top: 0%;
    left: 0%;
    width: 3rem;
    height: 1.5rem;
    transform: translate(-50%,-50%);
    background-color: rgb(50, 50, 50);
    border-radius: 1rem;
    transition: all 0.5s ease-in-out;
}

.CheckBoxContainer input[type="checkbox"]::after{
    content: '';
    position: absolute;
    top: 0%;
    left: calc(-1.5rem + 1.3rem / 2 + 0.15rem);
    width: 1.3rem;
    height: 1.3rem;
    transform: translate(-50%,-50%);
    background-color: rgb(70, 70, 70);
    border-radius: 50%;
    transition: all 0.5s ease-in-out;
}

.CheckBoxContainer input[type="checkbox"]:checked::after{
    left: calc(+1.5rem - 1.3rem / 2 - 0.15rem);
    background-color: rgb(0, 166, 255);
}

.CheckBoxContainer input[type="checkbox"]:checked::before{
    background-color: rgb(0, 84, 117);
}




.Modal{
    position: absolute;
    top: 0%;
    left: 0%;
    width: 100vw;
    height: 100vh;
    margin: 0%;
    background-color: rgba(0,0,0,0.8);
}

.ModalContent{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    width: 500px;

    background-color: var(--bg_window);
    border-radius: 1rem;
    box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.5);
    border: 1px solid black;
    padding: 1rem;
    display: flex;
    flex-direction: column;

    gap: 2rem;
}

.ModalContent h2{
    text-align: center;
}

.ModalContent > .ModalGrid{
    display: grid;
    width: 100%;

}


.ModalContent input[type="checkbox"]{
    left: -0.75rem;
    top: calc(1.5rem / 4);
}

.ModalBtnContainer{
    display: flex;
    align-items: 100%;
    justify-content: space-evenly;
}










.Hide{
    display: none;
  
}
